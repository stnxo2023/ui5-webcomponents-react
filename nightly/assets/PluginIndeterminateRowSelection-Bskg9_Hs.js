import{j as e}from"./iframe-sceg0YFv.js";import{useMDXComponents as r}from"./index-Dd71zBof.js";import{I as n,F as a}from"./CommandsAndQueries-DKneq4GY.js";import{M as s,C as m}from"./blocks-DYuUqipq.js";import"./Tag-CeuATfsT.js";import{M as p}from"./index-D3F4cwyn.js";import"./copy-BMdV5CCm.js";import{PluginIndeterminateRowSelection as l}from"./AnalyticalTableHooks.stories-D9V3hbO9.js";import"./preload-helper-PPVm8Dsz.js";import"./index-8sMjurJr.js";import"./index-DSENQiVR.js";import"./index-F95KXh_C.js";import"./Link-DWrZ8VdK.js";import"./index-Bk8MfuNW.js";import"./index-CEhCU38B.js";import"./index-DAUv-Nz3.js";import"./AvatarSize-BtKTMFJ5.js";import"./employee-BrlG2Z_i.js";import"./addCustomCSSWithScoping-CcKa_wrj.js";import"./index-B8FjapMT.js";import"./information-BKrgGcb8.js";import"./sys-enter-2-t67Ok8iZ.js";import"./alert-DGYqNpWm.js";import"./Friends500-CRbR9XAn.js";import"./AnalyticalTable.stories-pBbQnN3Z.js";import"./delete-BcYS3_de.js";import"./settings-DrHuTXnI.js";import"./NoData-BwUWak2R.js";import"./IllustratedMessage-CcQlEZMH.js";import"./i18n-defaults-BS8OTJAB.js";import"./parameters-bundle.css-MDhRcvbE.js";import"./sapIllus-Dialog-NoData-FSL26r8i.js";import"./sapIllus-Scene-NoData-aisCUu4O.js";import"./sapIllus-Spot-NoData-eoL49zJv.js";import"./sapIllus-Dot-NoData-DBRN6YSI.js";import"./index-Va26yAXy.js";import"./index-C4VdLOMW.js";import"./slim-arrow-down-B5pvNBWL.js";import"./Input-BzfDni2m.js";import"./ResponsivePopoverCommon.css-nC5XMOBp.js";import"./ValueStateMessage.css-DoUgf-5j.js";import"./Suggestions.css-BM83gU06.js";import"./ListBoxItemGroupTemplate-BqRj3VE-.js";import"./ComboBoxItemGroup-Cs6EfPox.js";import"./ListItemBaseTemplate-DRhEz-gw.js";import"./Token-CMcoBKOf.js";import"./ScrollEnablement-D3zh3Kdj.js";import"./animate-JylhYHXj.js";import"./ListItemStandard-B6k3txAq.js";import"./ToggleButton-DvFeI1Lt.js";import"./SuggestionItem-pUR3Pu7g.js";import"./index-DhvsTyd-.js";import"./Option-g5dMk_Dv.js";import"./index-M3RgBHzH.js";import"./SegmentedButton-u8O6wtdn.js";import"./index-CfnPZ09d.js";import"./Select-ByBsloVO.js";import"./InvisibleMessage-BWbsBg6p.js";import"./slim-arrow-down-BMGSx_7g.js";import"./index-NnSPlH_p.js";import"./index-CZeNbB2P.js";import"./IconDesign-DXd8PPVF.js";import"./filter-zkm8V6wo.js";import"./group-2-C-nKwgK2.js";import"./sort-descending-DgIX2NPP.js";import"./ThemingParameters-pyhX3s39.js";import"./stopPropagation-CsBxLuUS.js";import"./index-B8uJhRMm.js";import"./utils-DWNV0P4_.js";import"./index-BbsMwmmG.js";import"./index-CPOk0n0E.js";import"./index-LxsB8pJ3.js";import"./navigation-down-arrow-DeNM6o9T.js";import"./navigation-right-arrow-B8ciO61d.js";import"./navigation-right-arrow-Cpbh-nxP.js";import"./useCurrentTheme-BACbWtxM.js";import"./IndicationColor-DVw-fSM_.js";import"./index-PhsavknA.js";import"./debounce-D7W5PopO.js";import"./useIsRTL-2UKl6MPc.js";import"./paper-plane-B69Ziwxr.js";import"./index-Dnv3XQPA.js";import"./less-Byh4l9lP.js";import"./index-DPuz9km0.js";function i(o){const t={code:"code",h1:"h1",h2:"h2",h4:"h4",p:"p",pre:"pre",strong:"strong",...r(),...o.components};return e.jsxs(e.Fragment,{children:[e.jsx(s,{title:"Data Display / AnalyticalTable / Plugin Hooks / useIndeterminateRowSelection"}),`
`,e.jsx(t.h1,{id:"analyticaltable-plugin-useindeterminaterowselection",children:"AnalyticalTable Plugin: useIndeterminateRowSelection"}),`
`,e.jsx(n,{moduleName:"useIndeterminateRowSelection",packageName:"@ui5/webcomponents-react/AnalyticalTableHooks"}),`
`,e.jsxs(t.p,{children:["The ",e.jsx(t.code,{children:"useIndeterminateRowSelection"}),` plugin hook allows marking parent rows as indeterminate when a child row is selected.
When using this hook, it is recommended to also select all sub-rows when selecting a row. (`,e.jsx(t.code,{children:"reactTableOptions={{ selectSubRows: true }}"}),")"]}),`
`,e.jsxs(t.p,{children:[e.jsx(t.strong,{children:"Note:"})," This hook has to traverse the whole data tree on each selection, which can lead to performance degradation with large datasets. Please use with caution!"]}),`
`,e.jsxs(t.p,{children:[e.jsx(t.strong,{children:"Note:"})," Using this hook in combination with the deprecated ",e.jsx(t.code,{children:"useRowDisableSelection"})," plugin hook is not supported!"]}),`
`,e.jsx(p,{hideCloseButton:!0,children:e.jsxs(e.Fragment,{children:["The indeterminate state has a higher priority than the selected state. Therefore, a row can be selected and indeterminate at the same time. This can for example happen, if ",e.jsx(t.code,{children:"selectSubRows: true"})," is set and a row with sub-rows is selected and then a sub-row is unselected."]})}),`
`,e.jsx(t.h2,{id:"example",children:"Example"}),`
`,e.jsx(m,{sourceState:"none",of:l}),`
`,e.jsx(t.pre,{children:e.jsx(t.code,{className:"language-jsx",children:`const tableHooks = [useIndeterminateRowSelection()]; // should be memoized

<AnalyticalTable
  selectionMode={AnalyticalTableSelectionMode.Multiple}
  data={data}
  columns={columns}
  isTreeTable
  tableHooks={tableHooks}
  reactTableOptions={{ selectSubRows: true }}
/>
`})}),`
`,e.jsx(t.h4,{id:"optional-function-parameter",children:"Optional function parameter"}),`
`,e.jsx(t.p,{children:"The plugin hook allows passing a callback as parameter with the following structure:"}),`
`,e.jsx(t.pre,{children:e.jsx(t.code,{className:"language-js",children:`({indeterminateRowsById, tableInstance}) => void;
`})}),`
`,e.jsxs(t.p,{children:["The callback is fired, every time the internal ",e.jsx(t.code,{children:"indeterminateRows"}),` state is changed.
The event parameter is an object, with all indeterminate rows by id (e.g. `,e.jsx(t.code,{children:'{"0.1":true}'}),") and the table instance."]}),`
`,e.jsx(a,{})]})}function ze(o={}){const{wrapper:t}={...r(),...o.components};return t?e.jsx(t,{...o,children:e.jsx(i,{...o})}):i(o)}export{ze as default};
